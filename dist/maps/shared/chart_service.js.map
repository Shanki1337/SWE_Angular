{"version":3,"sources":["shared/chart_service.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;;;;;;;;;;;;;;;YA0BH;;eAEG;YAEH;gBAII;oBAHQ,eAAU,GACd,IAAI,GAAG,EAA0B,CAAC;oBAGlC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;oBAE1C,IAAI,CAAC,UAAU,CAAC,GAAG,CACf,CAAC,EAAE,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC,CAAE,MAAM;oBACzD,IAAI,CAAC,UAAU,CAAC,GAAG,CACf,CAAC,EAAE,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC,CAAE,QAAQ;oBAC3D,IAAI,CAAC,UAAU,CAAC,GAAG,CACf,CAAC,EAAE,EAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC,CAAE,SAAS;gBAChE,CAAC;gBAED;;;mBAGG;gBAEH,QAAQ,CAAC,YAA+B;oBACpC,EAAE,CAAC,CAAC,gBAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;wBACxB,OAAO,CAAC,KAAK,CACT,4CAA4C,EAAE,YAAY,CAAC,CAAC;wBAChE,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBACD,MAAM,GAAG,GACqB,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBAC5D,EAAE,CAAC,CAAC,gBAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACf,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;wBAC/C,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBAED,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC1B,CAAC;gBAED;;;;mBAIG;gBACH,WAAW,CAAC,GAAW;oBACnB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC9C,CAAC;gBAED;;;;mBAIG;gBACH,eAAe,CAAC,GAAW;oBACvB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;gBAClD,CAAC;gBAED,QAAQ;oBACJ,MAAM,CAAC,6BAA6B,IAAI,CAAC,UAAU,GAAG,CAAC;gBAC3D,CAAC;YACL,CAAC;YAtCG;gBAAC,YAAG;;;;wDAAA;YApBR;gBAAC,iBAAU,EAAE;;4BAAA;YACb,uCAyDC,CAAA","file":"shared/chart_service.js","sourcesContent":["/*\r\n * Copyright (C) 2015 - 2016 Juergen Zimmermann, Hochschule Karlsruhe\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n// Charts mittes JavaScript, siehe http://www.jsgraphs.com und\r\n// http://jqueryhouse.com/javascript-chart-and-graph-libraries\r\n// - D3: fuehrend, flexibel, aber keine vorgefertigten Layouts fuer z.B.\r\n// Balken-Diagramme\r\n// - Google Charts: nur online benutzbar, JS-Datei *nicht* auf eigenem Server\r\n// benutzbar\r\n// - Chart.js\r\n// - ...\r\n\r\nimport {Injectable} from 'angular2/core';\r\nimport {IChart, ChartSettings} from 'chart.js/Chart';\r\n\r\nimport {isBlank, log} from './shared';\r\n\r\ninterface ColorHighlight {\r\n    color: string;\r\n    highlight: string;\r\n}\r\n\r\ndeclare var Chart: {\r\n    new (context: CanvasRenderingContext2D): IChart;\r\n    defaults: {global: ChartSettings}\r\n};\r\n\r\n/**\r\n * Service-Klasse f&uuml;r die Verwendung von Chart.js.\r\n */\r\n@Injectable()\r\nexport class ChartService {\r\n    private _colorsPie: Map<number, ColorHighlight> =\r\n        new Map<number, ColorHighlight>();\r\n\r\n    constructor() {\r\n        console.log('ChartService.constructor()');\r\n\r\n        this._colorsPie.set(\r\n            0, {color: '#F7464A', highlight: '#FF5A5E'});  // red\r\n        this._colorsPie.set(\r\n            1, {color: '#46BFBD', highlight: '#5AD3D1'});  // green\r\n        this._colorsPie.set(\r\n            2, {color: '#FDB45C', highlight: '#FFC870'});  // yellow\r\n    }\r\n\r\n    /**\r\n     * @param elementId ID des HTML-Tags, bei dem das Chart eingesetzt wird.\r\n     * @return Chart-Objekt\r\n     */\r\n    @log\r\n    getChart(chartElement: HTMLCanvasElement): IChart {\r\n        if (isBlank(chartElement)) {\r\n            console.error(\r\n                `Kein HTML-Element fuer ein Chart gefunden:`, chartElement);\r\n            return null;\r\n        }\r\n        const ctx: CanvasRenderingContext2D =\r\n            <CanvasRenderingContext2D>chartElement.getContext('2d');\r\n        if (isBlank(ctx)) {\r\n            console.error('Kein 2D-Kontext gefunden', ctx);\r\n            return null;\r\n        }\r\n\r\n        return new Chart(ctx);\r\n    }\r\n\r\n    /**\r\n     * @param idx Fortlaufende Nummer f&uuml;r die Farbe bei einem\r\n     *        Tortendiagramm.\r\n     * @return String mit dem Hex-Code der Farbe.\r\n     */\r\n    getColorPie(idx: number): string {\r\n        return this._colorsPie.get(idx % 3).color;\r\n    }\r\n\r\n    /**\r\n     * @param idx Fortlaufende Nummer f&uuml;r die Farbe zur Hervorhebung bei\r\n     *        einem Tortendiagramm.\r\n     * @return String mit dem Hex-Code dieser Farbe.\r\n     */\r\n    getHighlightPie(idx: number): string {\r\n        return this._colorsPie.get(idx % 3).highlight;\r\n    }\r\n\r\n    toString(): string {\r\n        return `ChartService: {colorsPie: ${this._colorsPie}}`;\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}