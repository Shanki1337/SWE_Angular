{"version":3,"sources":["shared/functions.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;;;;IAEH,mCAAmC;IAEnC;;;OAGG;IACH,mBAA0B,GAAQ;QAC9B,YAAY,CAAC;QACb,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;IAC7C,CAAC;IAHD,iCAGC,CAAA;IAED;;OAEG;IACH,iBAAwB,GAAQ;QAC5B,YAAY,CAAC;QACb,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;IAC7C,CAAC;IAHD,6BAGC,CAAA;IAED;;;OAGG;IACH,iBAAwB,GAAW;QAC/B,YAAY,CAAC;QACb,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,EAAE,CAAC;IAC3D,CAAC;IAHD,6BAGC,CAAA;IAED;;OAEG;IACH,kBAAyB,GAAQ;QAC7B,YAAY,CAAC;QACb,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;IACnC,CAAC;IAHD,+BAGC,CAAA;IAED;;;;;;;;OAQG;IACH,kBAAyB,QAAgB,EAAE,QAAgB;QACvD,YAAY,CAAC;QACb,oCAAoC;QACpC,qGAAqG;QACrG,uDAAuD;QACvD,mCAAmC;QACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,IAAI,QAAQ,EAAE,CAAC,CAAC;IAClD,CAAC;IAPD,+BAOC,CAAA;;;;;;;AAED,0DAA0D;AAC1D,kDAAkD;AAClD,oBAAoB;AACpB,6BAA6B;AAC7B,mCAAmC;AACnC,oCAAoC;AACpC,oCAAoC;AACpC,6BAA6B;AAC7B,2BAA2B;AAC3B,oCAAoC;AACpC,SAAS;AACT,iEAAiE;AACjE,IAAI;AACJ,EAAE;AACF,qDAAqD;AACrD,oBAAoB;AACpB,6BAA6B;AAC7B,mCAAmC;AACnC,oCAAoC;AACpC,oCAAoC;AACpC,2BAA2B;AAC3B,SAAS;AACT,iEAAiE;AACjE,IAAI","file":"shared/functions.js","sourcesContent":["/*\r\n * Copyright (C) 2015 - 2016 Juergen Zimmermann, Hochschule Karlsruhe\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n// siehe ts\\src\\core\\facade\\lang.ts\r\n\r\n/**\r\n * Abfrage, ob ein Objekt weder <code>null</code> noch <code>undefined</code>\r\n * ist.\r\n */\r\nexport function isPresent(obj: any): boolean {\r\n    'use strict';\r\n    return obj !== undefined && obj !== null;\r\n}\r\n\r\n/**\r\n * Abfrage, ob ein Objekt <code>null</code> oder <code>undefined</code> ist.\r\n */\r\nexport function isBlank(obj: any): boolean {\r\n    'use strict';\r\n    return obj === undefined || obj === null;\r\n}\r\n\r\n/**\r\n * Abfrage, ob ein String leer oder <code>null</code> oder\r\n * <code>undefined</code> ist.\r\n */\r\nexport function isEmpty(obj: string): boolean {\r\n    'use strict';\r\n    return obj === undefined || obj === null || obj === '';\r\n}\r\n\r\n/**\r\n * Abfrage, ob ein Objekt ein String ist.\r\n */\r\nexport function isString(obj: any): boolean {\r\n    'use strict';\r\n    return typeof obj === 'string';\r\n}\r\n\r\n/**\r\n * Ein Benutzernamen und ein Passwort werden zu einem String zusammengefasst und\r\n * dabei durch einen Doppelpunkt (:) getrennt. Dieser String wird\r\n * anschlie&szlig;end mit Base64 codiert. Das Ergebnis kann dann f&uuml;\r\n * BASIC-Authentifizierung verwendet werden.\r\n * @param username Der Benutzername\r\n * @param password Das Passwort\r\n * @return Der mit Base64 codierte String.\r\n */\r\nexport function toBase64(username: string, password: string): string {\r\n    'use strict';\r\n    /* tslint:disable:max-line-length */\r\n    // http://stackoverflow.com/questions/34177221/angular2-how-to-inject-window-into-an-angular2-service\r\n    // https://gist.github.com/gdi2290/f8a524cdfb1f54f1a59c\r\n    /* tslint:enable:max-line-length */\r\n    return window.btoa(`${username}:${password}`);\r\n}\r\n\r\n// In AngularJS durch Pipes wie z.B. currency oder percent\r\n// export function toEuro(value: number): string {\r\n//     'use strict';\r\n//     const options: any = {\r\n//         minimumIntegerDigits: 1,\r\n//         minimumFractionDigits: 2,\r\n//         maximumFractionDigits: 2,\r\n//         style: 'currency',\r\n//         currency: 'eur',\r\n//         currencyDisplay: 'symbol'\r\n//     };\r\n//     return new Intl.NumberFormat('de', options).format(value);\r\n// }\r\n//\r\n// export function toProzent(value: number): string {\r\n//     'use strict';\r\n//     const options: any = {\r\n//         minimumIntegerDigits: 1,\r\n//         minimumFractionDigits: 1,\r\n//         maximumFractionDigits: 2,\r\n//         style: 'percent'\r\n//     };\r\n//     return new Intl.NumberFormat('de', options).format(value);\r\n// }\r\n"],"sourceRoot":"/source/"}