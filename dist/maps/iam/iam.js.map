{"version":3,"sources":["iam/iam.ts"],"names":[],"mappings":"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","file":"iam/iam.js","sourcesContent":["/*\r\n * Copyright (C) 2015 - 2016 Juergen Zimmermann, Hochschule Karlsruhe\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n// Service-Funktionen fuer das Identity- and Access Management (IAM)\r\n// zur Verwendung bei z.B. @CanActivate()\r\n\r\n// import * as jwtDecode from 'jwt-decode';\r\n\r\nimport Cookie from './cookie';\r\nimport {toBase64, BASE_URI, HTTPS} from '../shared/shared';\r\n\r\nconst loginUri: string = `${BASE_URI}login`;\r\nconst authorization: string = 'authorization';\r\nconst roles: string = 'roles';\r\nconst expiration: string = 'expiration';\r\n\r\n/**\r\n * @param username als String\r\n * @param password als String\r\n * @return void\r\n */\r\nexport function login(username: string, password: string): void {\r\n    'use strict';\r\n    console.log(`iam.login(): username=${username}, password=${password}`);\r\n\r\n    if (BASE_URI.startsWith(HTTPS)) {\r\n        // Mocking: String fuer Basic-Authentifizierung\r\n        const authorizationValue: string =\r\n            `Basic ${toBase64(username, password)}`;\r\n        console.log(`iam.login(): authorization=${authorizationValue}`);\r\n        Cookie.setCookie(authorization, authorizationValue);\r\n        Cookie.setCookie(roles, 'admin,mitarbeiter');\r\n        return;\r\n    }\r\n\r\n    console.log(`Login URI = ${loginUri}`);\r\n\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n    const headers: Headers = new Headers();\r\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n    const body: string = `username=${username}&password=${password}`;\r\n    const request: Request =\r\n        new Request(loginUri, {method: 'POST', headers: headers, body: body});\r\n\r\n    fetch(request)\r\n        .then(\r\n            (response: Response):\r\n                Promise<any> => {\r\n                    const status: number = response.status;\r\n                    console.log(`fetch.then(): status=${status}`);\r\n                    if (status !== 200) {\r\n                        return Promise.reject(new Error(response.statusText));\r\n                    }\r\n                    // Response.json() liefert Promise<any>\r\n                    return Promise.resolve(response.json());\r\n                })\r\n        .then((json: any) => {\r\n            console.log('fetch.then(): json', json);\r\n            const token: string = json.token;\r\n\r\n            const authorizationValue: string = `Bearer ${token}`;\r\n            console.log(\r\n                `fetch.then(): authorizationValue=${authorizationValue}`);\r\n            Cookie.setCookie(authorization, authorizationValue);\r\n\r\n            const rolesValue: string = json.roles.join();\r\n            console.log(`fetch.then(): rolesValue=${rolesValue}`);\r\n            Cookie.setCookie(roles, rolesValue);\r\n\r\n            // FIXME jwt-decode statt manuelle Berechnen fuer 1 Tag\r\n            // const decodedToken: any = jwtDecode(token);\r\n            // console.log('fetch.then(): decodedToken', decodedToken);\r\n            const current: number = Math.floor(Date.now() / 1000);\r\n            const oneDay: number = 24 * 60 * 60;\r\n            const expirationValue: number = current + oneDay;\r\n            Cookie.setCookie(expiration, expirationValue.toString());\r\n        })\r\n        .catch(\r\n            (err: any) =>\r\n                console.error(`iam.login: err=${JSON.stringify(err)}`));\r\n}\r\n\r\n/**\r\n * @return void\r\n */\r\nexport function logout(): void {\r\n    'use strict';\r\n    console.log('iam.logout()');\r\n    Cookie.deleteCookie(authorization);\r\n    Cookie.deleteCookie(roles);\r\n}\r\n\r\n/**\r\n * @return true, falls ein User eingeloggt ist; sonst false.\r\n */\r\nexport function isLoggedIn(): boolean {\r\n    'use strict';\r\n    if (expired()) {\r\n        return false;\r\n    }\r\n\r\n    return Cookie.getCookie(authorization) !== null;\r\n}\r\n\r\n/**\r\n * @return true, falls ein User in der Rolle \"admin\" eingeloggt ist;\r\n *         sonst false.\r\n */\r\nexport function isAdmin(): boolean {\r\n    'use strict';\r\n    if (expired()) {\r\n        return false;\r\n    }\r\n\r\n    // z.B. 'admin,mitarbeiter'\r\n    const rolesStr: string = Cookie.getCookie(roles);\r\n    if (rolesStr === null) {\r\n        return false;\r\n    }\r\n\r\n    // z.B. ['admin', 'mitarbeiter']\r\n    const rolesArray: Array<string> = rolesStr.split(',');\r\n    return rolesArray !== null\r\n        && rolesArray.find(r => r === 'admin') !== undefined;\r\n}\r\n\r\n/**\r\n * @return String fuer JWT oder Basic-Authentifizierung\r\n */\r\nexport function getAuthorization(): string {\r\n    'use strict';\r\n    return Cookie.getCookie(authorization);\r\n}\r\n\r\n/**\r\n * @return Ist JWT abgelaufen oder noch g&uuml;ltig\r\n */\r\nfunction expired(): boolean {\r\n    'use strict';\r\n    if (BASE_URI.startsWith(HTTPS)) {\r\n        return false;\r\n    }\r\n\r\n    const expirationStr: string = Cookie.getCookie(expiration);\r\n    const expirationNumber: number = parseInt(expirationStr, 10);\r\n    const current: number = Math.floor(Date.now() / 1000);\r\n    if (current > expirationNumber) {\r\n        logout();\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n"],"sourceRoot":"/source/"}