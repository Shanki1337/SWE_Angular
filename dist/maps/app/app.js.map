{"version":3,"sources":["app/app.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAoBH,2EAA2E;YAC3E,2EAA2E;YAC3E,sCAAsC;YAEtC,+EAA+E;YAC/E,+EAA+E;YAC/E,kBAAkB;YAClB,0EAA0E;YAC1E,sCAAsC;YACtC,qEAAqE;YACrE,mFAAmF;YAEnF,4DAA4D;YAC5D,+EAA+E;YAC/E,+EAA+E;YAC/E,iEAAiE;YACjE,wDAAwD;YAExD,8DAA8D;YAC9D,0BAA0B;YAC1B,yCAAyC;YACzC,UAAU;YACV,yBAAyB;YACzB,iCAAiC;YACjC,+BAA+B;YAC/B,+BAA+B;YAC/B,gCAAgC;YAChC,cAAc;YACd,8CAA8C;YAC9C,eAAe;YACf,kBAAkB;YAClB,QAAQ;YAER;;eAEG;YAsFH;gBACI;oBAAgB,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;gBAAC,CAAC;YACvD,CAAC;YAvFD;gBAAC,gBAAS,CAAC;oBACP,uEAAuE;oBACvE,yEAAyE;oBACzE,sDAAsD;oBACtD,qDAAqD;oBACrD,YAAY;oBACZ,UAAU;oBACV,qBAAqB;oBACrB,gBAAgB;oBAChB,sBAAsB;oBACtB,kBAAkB;oBAClB,gBAAgB;oBAChB,mBAAmB;oBACnB,mBAAmB;oBACnB,8BAA8B;oBAC9B,gCAAgC;oBAChC,qCAAqC;oBACrC,4BAA4B;oBAC5B,sCAAsC;oBACtC,wCAAwC;oBACxC,4BAA4B;oBAC5B,yCAAyC;oBACzC,iCAAiC;oBACjC,8BAA8B;oBAC9B,oBAAoB;oBACpB,qBAAqB;oBACrB,gBAAgB;oBAChB,sBAAsB;oBACtB,WAAW;oBACX,QAAQ,EAAE,KAAK;oBAEf,mDAAmD;oBACnD,uDAAuD;oBACvD,UAAU,EAAE,CAAC,gBAAM,EAAE,aAAG,EAAE,cAAI,EAAE,gBAAM,CAAC;oBAEvC,mEAAmE;oBACnE,0EAA0E;oBAC1E,8CAA8C;oBAC9C,kDAAkD;oBAClD,2EAA2E;oBAC3E,YAAY;oBACZ,mDAAmD;oBACnD,iEAAiE;oBACjE,kEAAkE;oBAClE,sEAAsE;oBACtE,yEAAyE;oBACzE,EAAE;oBACF,yEAAyE;oBACzE,iEAAiE;oBACjE,6BAA6B;oBAC7B,uEAAuE;oBACvE,kDAAkD;oBAClD,wEAAwE;oBACxE,gDAAgD;oBAChD,iDAAiD;oBACjD,iDAAiD;oBACjD,QAAQ,EAAE;;;;;;;;;;;;;;;KAeT;iBAEJ,CAAC;gBAID,oBAAW,CAAC,8BAAqB,CAAC;;mBAAA;YAQnC,yBAEC,CAAA","file":"app/app.js","sourcesContent":["/*\r\n * Copyright (C) 2015 - 2016 Juergen Zimmermann, Hochschule Karlsruhe\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n// AngularJS unterstuetzt npm als Package Manager. Deshalb werden .d.ts-Dateien\r\n// im Verzeichnis node_modules bereitgestellt.\r\n// https://github.com/angular/angular/issues/5248#issuecomment-156886060\r\n// https://github.com/Microsoft/TypeScript/issues/5039\r\n// https://github.com/DefinitelyTyped/DefinitelyTyped\r\n\r\n// \"core\" enthaelt Funktionalitaet, damit die Webanwendung im Browser laeuft\r\nimport {Component} from 'angular2/core';\r\n\r\n// Konfiguration des Routings durch @RouteConfig\r\nimport {RouteConfig} from 'angular2/router';\r\n\r\nimport Header from './header';\r\nimport Nav from './nav';\r\nimport Main from './main';\r\nimport Footer from './footer';\r\nimport {APP_ROUTE_DEFINITIONS} from './routes';\r\n\r\n// \"Composite Pattern\" bei UIs: Eine UI-Komponente besteht aus wiederum aus\r\n// einfachen UI-Komponenten, z.B. ein Suchformular besteht aus einem Label,\r\n// einem Eingabefeld und einem Button.\r\n\r\n// Eine Komponente bei Angular ist an das MVC-Pattern angelehnt und besteht aus\r\n// HTML-Tags (= View) einschl. der Dialogsteuerung (= Controller) mit dem Model\r\n// als Bindeglied.\r\n// Controller sind klein (\"Thin Controllers\") und die Anwendungslogik wird\r\n// in die Service-Klassen ausgelagert.\r\n// Innerhalb der Wurzelkomponente werden die Kindkomponenten geladen.\r\n// https://angular.io/docs/js/latest/api/annotations/ComponentAnnotation-class.html\r\n\r\n// Metadaten-Annotationen in AngularJS sind z.B. @Component.\r\n// Annotationen sind ein Spezialfall der Decorators, die es ab ES 7 geben wird:\r\n// Ein Decorator erweitert die vorhandene Funktionalitaet von einer Klasse oder\r\n// einer Methode oder einem Attribut oder einem Methodenargument.\r\n// siehe https://github.com/wycats/javascript-decorators\r\n\r\n// Generierter Code einschl. IIFE durch einen Transpiler z.B.:\r\n// var App = (function() {\r\n//     function App() {/* Konstruktor */}\r\n//     ...\r\n//     App = __decorate([\r\n//         angular2_1.Component({\r\n//             selector: 'app',\r\n//             template: \"...\",\r\n//             directives: [...]\r\n//         }),\r\n//         __metadata('design:paramtypes', [])\r\n//     ], App);\r\n//     return App;\r\n// })();\r\n\r\n/**\r\n * Wurzelkomponente mit dem Tag &lt;app&gt;\r\n */\r\n@Component({\r\n    // Schnittstelle der View fuer Wiederverwendung in anderen Komponenten:\r\n    // durch das Tag <app> in index.html, d.h. CSS-Selector wird spezifiziert\r\n    // Schreibweise innerhalb von HTML:         kebab-case\r\n    // Schreibweise innerhalb von TypeScript:   CamelCase\r\n    // Beispiel:\r\n    //   <app>\r\n    //       <app-header>\r\n    //           ...\r\n    //       </app-header>\r\n    //       <app-nav>\r\n    //           ...\r\n    //       </app-nav>\r\n    //       <app-main>\r\n    //           <router-viewport>\r\n    //               <suche-buecher>\r\n    //                   <such-kriterien>\r\n    //                       ...\r\n    //                   </such-kriterien>\r\n    //                   <gefundene-buecher>\r\n    //                       ...\r\n    //                   </gefundene-buecher>\r\n    //               </suche-buecher>\r\n    //           <router-viewport>\r\n    //       </app-main>\r\n    //       <app-footer>\r\n    //           ...\r\n    //       </app-footer>\r\n    //   </app>\r\n    selector: 'app',\r\n\r\n    // Verwendete Komponenten im Template (= View) s.u.\r\n    // Komponenten sind Direktiven zzgl. einer eigenen View\r\n    directives: [Header, Nav, Main, Footer],\r\n\r\n    // \"template - A document or file having a preset format, used as a\r\n    // starting point for a particular application so that the format does not\r\n    // have to be recreated each time it is used.\"\r\n    // Siehe http://www.thefreedictionary.com/template\r\n    // HTML-Templates ~ View bei MVC: das Model referenzieren u. den Controller\r\n    // aufrufen.\r\n    // Multi-line Strings fuer kleine Inline-Templates.\r\n    // Vorteile:  alles auf einen Blick und keine separate HTML-Datei\r\n    // Nachteile: kein Syntax-Highlighting, kein Autovervollstaendigen\r\n    // VS Code soll kuenftig Syntax-Highlighting und IntelliSense koennen:\r\n    // https://github.com/angular/angular/blob/master/CHANGELOG.md#features-4\r\n    //\r\n    // Composed DOM: Der Baum und die Tags, die im Browser dargestellt werden\r\n    // Light DOM:    Der Baum, in den der Shadow-DOM eingefuegt wird,\r\n    //               z.B. <suche>\r\n    // Shadow DOM:   Der Baum, der innerhalb des Light DOM eingefuegt wird,\r\n    //               z.B. das Template aus SucheTitel.\r\n    //               Dieser Baum ist zunaechst vor dem Endbenutzer verborgen\r\n    // http://webcomponents.org/polyfills/shadow-dom\r\n    // http://w3c.github.io/webcomponents/spec/shadow\r\n    // https://github.com/angular/angular/issues/2529\r\n    template: `\r\n        <div class=\"row\">\r\n            <!-- Eigene Komponente fuer die Kopfleiste -->\r\n            <app-header></app-header>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!-- Eigene Komponente fuer die Navigationsleiste -->\r\n            <app-nav></app-nav>\r\n            <!-- Eigene Komponente fuer den Haupteil: austauschbar durch Routing -->\r\n            <app-main></app-main>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!-- Eigene Komponente fuer die Fussleiste -->\r\n            <app-footer></app-footer>\r\n        </div>\r\n    `\r\n    // encapsulation: ViewEncapsulation.Native\r\n})\r\n\r\n// Konfiguration des Routings fuer die Komponente \"App\":\r\n// Bookmarks, Refresh der aktuellen Seite, ...\r\n@RouteConfig(APP_ROUTE_DEFINITIONS)\r\n\r\n// Definitionsklasse ~ Controller: Eingabedaten entgegennehmen, Model fuer die\r\n// View aktualisieren, Funktionen fuer die Benutzer-Interaktion bereitstellen,\r\n// z.B. onClick oder onSubmit\r\n// Die Doku zu AngularJS haengt immer noch den Suffix \"Component\" an die Klasse\r\n// Eine Komponentenklasse braucht trotz default-Export einen Klassennamen, damit\r\n// sie als Direktive injiziert werden kann.\r\nexport default class App {\r\n    constructor() { console.log('App.constructor()'); }\r\n}\r\n"],"sourceRoot":"/source/"}