{"version":3,"sources":["artikelverwaltung/service/artikel_service.ts"],"names":[],"mappings":"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","file":"artikelverwaltung/service/artikel_service.js","sourcesContent":["/*\r\n * Copyright (C) 2015 - 2016 Juergen Zimmermann, Hochschule Karlsruhe\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n/* tslint:disable:max-line-length */\r\nimport {Inject, EventEmitter, provide, Provider} from 'angular2/core';\r\nimport {Http, Response, URLSearchParams} from 'angular2/http';\r\n\r\nimport {IChart, ChartDataSet, LinearChartData, CircularChartData} from 'chart.js/Chart';\r\n\r\nimport Artikel from '../model/artikel';\r\nimport {IArtikelServer, IArtikelForm} from '../model/artikel';\r\n// import AbstractArtikelService from './abstract_artikel_service';\r\nimport {ChartService, BASE_URI, PATH_ARTIKEL, PATH_KATALOG , isBlank, isPresent, isEmpty, log} from '../../shared/shared';\r\n/* tslint:enable:max-line-length */\r\n\r\n// Methoden der Klasse Http\r\n//  * get(url, options) – HTTP GET request\r\n//  * post(url, body, options) – HTTP POST request\r\n//  * put(url, body, options) – HTTP PUT request\r\n//  * patch(url, body, options) – HTTP PATCH request\r\n//  * delete(url, options) – HTTP DELETE request\r\n\r\n// Eine Service-Klasse ist eine \"normale\" Klasse gemaess ES 2015, die mittels\r\n// DI in eine Komponente injiziert werden kann, falls sie in einer\r\n// Elternkomponente durch @Component(provider: ...) bereitgestellt wird.\r\n// Eine Komponente realisiert gemaess MVC-Pattern den Controller und die View.\r\n// Die Anwendungslogik wird vom Controller an Service-Klassen delegiert.\r\n\r\n/**\r\n * Die Service-Klasse zu B&uuml;cher.\r\n */\r\nexport default class ArtikelService {\r\n    private _baseUriArtikel: string;\r\n    private _baseUriKatalog: string;\r\n    private _artikelzEmitter: EventEmitter<Array<Artikel>> =\r\n        new EventEmitter<Array<Artikel>>();\r\n    private _artikelEmitter: EventEmitter<Artikel> =\r\n        new EventEmitter<Artikel>();\r\n    private _errorEmitter: EventEmitter<string|number> =\r\n        new EventEmitter<string|number>();\r\n    private _artikel: Artikel = null;\r\n\r\n    /**\r\n     * @param _chartService injizierter ChartService\r\n     * @param _http injizierter Service Http (von AngularJS)\r\n     * @return void\r\n     */\r\n    constructor(\r\n        @Inject(ChartService) private _chartService: ChartService,\r\n        @Inject(Http) private _http: Http) {\r\n        this._baseUriArtikel = `${BASE_URI}${PATH_ARTIKEL}`;\r\n        this._baseUriKatalog = `${BASE_URI}${PATH_KATALOG}`;\r\n        console.log(\r\n            `ArtikelService.constructor(): \r\n                baseUriArtikel${this._baseUriArtikel}\r\n                baseUriKatalog${this._baseUriKatalog}`);\r\n    }\r\n\r\n    /**\r\n     * Ein Buch-Objekt puffern.\r\n     * @param buch Das Buch-Objekt, das gepuffert wird.\r\n     * @return void\r\n     */\r\n    set artikel(artikel: Artikel) {\r\n        console.log('ArtikelService.set artikel()', artikel);\r\n        this._artikel = artikel;\r\n    }\r\n\r\n    @log\r\n    observeArtikelz(\r\n        observerFn: (artikelz: Array<Artikel>) => void, thisArg: any):\r\n        void {\r\n        this._artikelzEmitter.forEach(observerFn, thisArg);\r\n    }\r\n\r\n    @log\r\n    observeArtikel(observerFn: (artikel: Artikel) => void, thisArg: any): void {\r\n        this._artikelEmitter.forEach(observerFn, thisArg);\r\n    }\r\n\r\n    @log\r\n    observeError(observerFn: (err: string|number) => void, thisArg: any): void {\r\n        this._errorEmitter.forEach(observerFn, thisArg);\r\n    }\r\n\r\n    /**\r\n     * Buecher suchen\r\n     * @param suchkriterien Die Suchkriterien\r\n     */\r\n    @log\r\n    find(suchkriterien: IArtikelForm): void {\r\n        const searchParams: URLSearchParams =\r\n            this._suchkriterienToSearchParams(suchkriterien);\r\n        const uri: string = this._baseUriKatalog;\r\n        console.log(`ArtikelService.find(): uri=${uri}`);\r\n\r\n        const nextFn: ((response: Response) => void) = (response: Response) => {\r\n            console.log(`ArtikelService.find(): nextFn()`);\r\n            let artikel: Array<Artikel> =\r\n                this._responseToArrayArtikel(response);\r\n            this._artikelzEmitter.emit(artikel);\r\n        };\r\n        const errorFn: (err: Response) => void = (err: Response) => {\r\n            const status: number = err.status;\r\n            console.log(`ArtikelService.find(): errorFn(): ${status}`);\r\n            if (status === 400) {\r\n                const body: string = err.text();\r\n                if (isBlank(body)) {\r\n                    this._errorEmitter.emit(status);\r\n                } else {\r\n                    // z.B. [PARAMETER][findByTitel.titel][Bei einem ...][x]\r\n                    let errorMsg: string = body.split('[')[3];\r\n                    errorMsg = errorMsg.substr(0, errorMsg.length - 2);\r\n                    this._errorEmitter.emit(errorMsg);\r\n                }\r\n            } else {\r\n                this._errorEmitter.emit(status);\r\n            }\r\n        };\r\n\r\n        this._http.get(uri, {search: searchParams}).subscribe(nextFn, errorFn);\r\n    }\r\n\r\n    /**\r\n     * Ein Buch anhand der ID suchen\r\n     * @param id Die ID des gesuchten Buchs\r\n     */\r\n    @log\r\n    findById(id: string): void {\r\n        // Gibt es ein gepuffertes Buch mit der gesuchten ID?\r\n        if (isPresent(this._artikel) && this._artikel._id === id) {\r\n            this._artikelEmitter.emit(this._artikel);\r\n            return;\r\n        }\r\n        if (isBlank(id)) {\r\n            return;\r\n        }\r\n\r\n        const uri: string = `${this._baseUriKatalog}/${id}`;\r\n        const nextFn: ((response: Response) => void) = (response: Response) => {\r\n            this._artikel = this._responseToArtikel(response);\r\n            this._artikelEmitter.emit(this._artikel);\r\n        };\r\n        const errorFn: (err: Response) => void = (err: Response) => {\r\n            const status: number = err.status;\r\n            console.log(`ArtikelService.findById(): errorFn(): ${status}`);\r\n            this._errorEmitter.emit(status);\r\n        };\r\n\r\n        this._http.get(uri).subscribe(nextFn, errorFn);\r\n    }\r\n\r\n    /**\r\n     * Ein neues Buch anlegen\r\n     * @param neuesBuch Das JSON-Objekt mit dem neuen Buch\r\n     * @param successFn Die Callback-Function fuer den Erfolgsfall\r\n     * @param errorFn Die Callback-Function fuer den Fehlerfall\r\n     */\r\n    /*\r\n    @log\r\n    save(\r\n        neuesBuch: Buch, successFn: (location: string) => void,\r\n        errorFn: (status: number, text: string) => void): void {\r\n        neuesBuch.datum = moment(new Date());\r\n\r\n        const uri: string = this._baseUriBuecher;\r\n        const body: string = JSON.stringify(neuesBuch.toJSON());\r\n        console.log('body=', body);\r\n\r\n        const headers: Headers =\r\n            new Headers({ 'Content-Type': 'application/json' });\r\n        headers.append('Authorization', getAuthorization());\r\n        // RequestOptionsArgs in\r\n        // node_modules\\angular2\\ts\\src\\http\\interfaces.ts\r\n        const options: RequestOptionsArgs = { headers: headers };\r\n        console.log('options=', options);\r\n\r\n        const nextFn: ((response: Response) => void) = (response: Response) => {\r\n            if (response.status === 201) {\r\n                // TODO Das Response-Objekt enthaelt im Header NICHT \"Location\"\r\n                successFn(null);\r\n                return;\r\n            }\r\n        };\r\n        // async. Error-Callback statt sync. try/catch\r\n        const errorFnPost: ((errResponse: Response) => void) =\r\n            (errResponse: Response) => {\r\n                if (isPresent(errorFn)) {\r\n                    errorFn(errResponse.status, errResponse.text());\r\n                }\r\n            };\r\n        this._http.post(uri, body, options).subscribe(nextFn, errorFnPost);\r\n\r\n    }\r\n    */\r\n\r\n    // http://www.sitepoint.com/15-best-javascript-charting-libraries\r\n    // http://thenextweb.com/dd/2015/06/12/20-best-javascript-chart-libraries\r\n    // http://mikemcdearmon.com/portfolio/techposts/charting-libraries-using-d3\r\n\r\n    // D3 (= Data Driven Documents) ist das fuehrende Produkt fuer\r\n    // Datenvisualisierung:\r\n    //  initiale Version durch die Dissertation von Mike Bostock\r\n    //  gesponsort von der New York Times, seinem heutigen Arbeitgeber\r\n    //  basiert auf SVG = scalable vector graphics: Punkte, Linien, Kurven, ...\r\n    //  ca 250.000 Downloads/Monat bei https://www.npmjs.com\r\n    //  https://github.com/mbostock/d3 mit ueber 100 Contributors\r\n\r\n    // Chart.js ist deutlich einfacher zu benutzen als D3\r\n    //  basiert auf <canvas>\r\n    //  ca 25.000 Downloads/Monat bei https://www.npmjs.com\r\n    //  https://github.com/nnnick/Chart.js mit ueber 60 Contributors\r\n\r\n    /**\r\n     * Ein Balkendiagramm erzeugen und bei einem Tag <code>canvas</code>\r\n     * einf&uuml;gen.\r\n     * @param chartElement Das HTML-Element zum Tag <code>canvas</code>\r\n     */\r\n    @log\r\n    setBarChart(chartElement: HTMLCanvasElement): void {\r\n        const uri: string = this._baseUriArtikel;\r\n        const successFn: Function = (response: Response) => {\r\n            this._createBarChart(\r\n                chartElement, this._responseToArrayArtikel(response));\r\n        };\r\n        const errorFn: Function =\r\n            (response: Response) => { console.error('response=', response); };\r\n        const nextFn: ((response: Response) => void) = (response: Response) => {\r\n            if (response.status === 200) {\r\n                successFn(response);\r\n                return;\r\n            }\r\n            errorFn(response);\r\n        };\r\n\r\n        this._http.get(uri).subscribe(nextFn);\r\n    }\r\n\r\n    /**\r\n     * Ein Liniendiagramm erzeugen und bei einem Tag <code>canvas</code>\r\n     * einf&uuml;gen.\r\n     * @param chartElement Das HTML-Element zum Tag <code>canvas</code>\r\n     */\r\n    @log\r\n    setLinearChart(chartElement: HTMLCanvasElement): void {\r\n        const uri: string = this._baseUriArtikel;\r\n        const successFn: Function = (response: Response) => {\r\n            this._createLineChart(\r\n                chartElement, this._responseToArrayArtikel(response));\r\n        };\r\n        const errorFn: Function =\r\n            (response: Response) => { console.error('response=', response); };\r\n        const nextFn: ((response: Response) => void) = (response: Response) => {\r\n            if (response.status === 200) {\r\n                successFn(response);\r\n                return;\r\n            }\r\n            errorFn(response);\r\n        };\r\n\r\n        this._http.get(uri).subscribe(nextFn);\r\n    }\r\n\r\n    /**\r\n     * Ein Tortendiagramm erzeugen und bei einem Tag <code>canvas</code>\r\n     * einf&uuml;gen.\r\n     * @param chartElement Das HTML-Element zum Tag <code>canvas</code>\r\n     */\r\n    @log\r\n    setPieChart(chartElement: HTMLCanvasElement): void {\r\n        const uri: string = this._baseUriArtikel;\r\n        const successFn: Function = (response: Response) => {\r\n            this._createPieChart(\r\n                chartElement, this._responseToArrayArtikel(response));\r\n        };\r\n        const errorFn: Function =\r\n            (response: Response) => { console.error('response=', response); };\r\n        const nextFn: ((response: Response) => void) = (response: Response) => {\r\n            if (response.status === 200) {\r\n                successFn(response);\r\n                return;\r\n            }\r\n            errorFn(response);\r\n        };\r\n\r\n        this._http.get(uri).subscribe(nextFn);\r\n    }\r\n\r\n    toString(): String {\r\n        return `ArtikelService:\r\n            {artikel: ${JSON.stringify(this._artikel, null, 2)}}`;\r\n    }\r\n\r\n    /**\r\n     * Ein Response-Objekt in ein Array von Buch-Objekten konvertieren.\r\n     * @param response Response-Objekt eines GET-Requests.\r\n     */\r\n    @log\r\n    private _suchkriterienToSearchParams(suchkriterien: IArtikelForm):\r\n        URLSearchParams {\r\n        const searchParams: URLSearchParams = new URLSearchParams();\r\n\r\n        if (!isEmpty(suchkriterien._id)) {\r\n            searchParams.set('isd', suchkriterien._id);\r\n        }\r\n        if (!isEmpty(suchkriterien.bezeichnung)) {\r\n            searchParams.set('bezeichnung', suchkriterien.bezeichnung);\r\n        }\r\n        return searchParams;\r\n    }\r\n\r\n    /**\r\n     * Ein Response-Objekt in ein Array von Buch-Objekten konvertieren.\r\n     * @param response Response-Objekt eines GET-Requests.\r\n     */\r\n    @log\r\n    private _responseToArrayArtikel(response: Response): Array<Artikel> {\r\n        const jsonArray: Array<IArtikelServer> =\r\n            <Array<IArtikelServer>>(response.json());\r\n        return jsonArray.map((jsonObjekt: IArtikelServer) => {\r\n            return Artikel.fromServer(jsonObjekt);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Ein Response-Objekt in ein Buch-Objekt konvertieren.\r\n     * @param response Response-Objekt eines GET-Requests.\r\n     */\r\n    @log\r\n    private _responseToArtikel(response: Response): Artikel {\r\n        const jsonObjekt: IArtikelServer = <IArtikelServer>(response.json());\r\n        return Artikel.fromServer(jsonObjekt);\r\n    }\r\n\r\n    /**\r\n     * Ein Balkendiagramm erzeugen und bei einem Tag <code>canvas</code>\r\n     * einf&uuml;gen.\r\n     * @param chartElement Das HTML-Element zum Tag <code>canvas</code>\r\n     * @param buecher Die zu ber&uecksichtigenden B&uuml;cher\r\n     */\r\n    @log\r\n    private _createBarChart(\r\n        chartElement: HTMLCanvasElement, artikelz: Array<Artikel>): void {\r\n        const labels: Array<string> =\r\n            artikelz.map((artikel: Artikel) => artikel._id);\r\n        const datasets: Array<ChartDataSet> = [{\r\n            label: 'Bewertungen',\r\n            fillColor: 'rgba(220,220,220,0.2)',\r\n            strokeColor: 'rgba(220,220,220,1)',\r\n            data: artikelz.map((artikel: Artikel) => artikel.rating)\r\n        }];\r\n        const data: LinearChartData = {labels: labels, datasets: datasets};\r\n        console.log('ArtikelService._createBarChart(): labels: ', labels);\r\n\r\n        const chart: IChart = this._chartService.getChart(chartElement);\r\n        if (isPresent(chart) && isPresent(datasets[0].data)\r\n            && datasets[0].data.length !== 0) {\r\n            chart.Bar(data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ein Liniendiagramm erzeugen und bei einem Tag <code>canvas</code>\r\n     * einf&uuml;gen.\r\n     * @param chartElement Das HTML-Element zum Tag <code>canvas</code>\r\n     * @param buecher Die zu ber&uecksichtigenden B&uuml;cher\r\n     */\r\n    @log\r\n    private _createLineChart(\r\n        chartElement: HTMLCanvasElement, artikelz: Array<Artikel>): void {\r\n        const labels: Array<string> =\r\n            artikelz.map((artikel: Artikel) => artikel._id);\r\n        const datasets: Array<ChartDataSet> = [{\r\n            label: 'Bewertungen',\r\n            fillColor: 'rgba(220,220,220,0.2)',\r\n            strokeColor: 'rgba(220,220,220,1)',\r\n            data: artikelz.map((artikel: Artikel) => artikel.rating)\r\n        }];\r\n        const data: LinearChartData = {labels: labels, datasets: datasets};\r\n\r\n        // TODO Chart.js 2.0: Das Datenmodell aendert sich\r\n        //      http://nnnick.github.io/Chart.js/docs-v2\r\n        //      https://github.com/nnnick/Chart.js/blob/v2.0-alpha/README.md\r\n        //      chart.d.ts gibt es noch nicht fuer 2.0:\r\n        //      https://github.com/nnnick/Chart.js/issues/1572\r\n        const chart: IChart = this._chartService.getChart(chartElement);\r\n        if (isPresent(chart) && isPresent(datasets[0].data)\r\n            && datasets[0].data.length !== 0) {\r\n            chart.Line(data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ein Tortendiagramm erzeugen und bei einem Tag <code>canvas</code>\r\n     * einf&uuml;gen.\r\n     * @param chartElement Das HTML-Element zum Tag <code>canvas</code>\r\n     * @param buecher Die zu ber&uecksichtigenden B&uuml;cher\r\n     */\r\n    @log\r\n    private _createPieChart(\r\n        chartElement: HTMLCanvasElement, artikelz: Array<Artikel>): void {\r\n        const pieData: Array<CircularChartData> =\r\n            new Array<CircularChartData>(artikelz.length);\r\n        artikelz.forEach((artikel: Artikel, i: number) => {\r\n            const data: CircularChartData = {\r\n                value: artikel.rating,\r\n                color: this._chartService.getColorPie(i),\r\n                highlight: this._chartService.getHighlightPie(i),\r\n                label: `${artikel._id}`\r\n            };\r\n            pieData[i] = data;\r\n        });\r\n\r\n        const chart: IChart = this._chartService.getChart(chartElement);\r\n        if (isPresent(chart) && pieData.length !== 0) {\r\n            chart.Pie(pieData);\r\n        }\r\n    }\r\n}\r\n\r\nexport const ARTIKEL_SERVICE_PROVIDER: Provider =\r\n    provide(ArtikelService, {useClass: ArtikelService});\r\n"],"sourceRoot":"/source/"}