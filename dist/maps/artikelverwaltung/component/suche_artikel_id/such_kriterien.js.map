{"version":3,"sources":["artikelverwaltung/component/suche_artikel_id/such_kriterien.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAUH;;eAEG;YA8DH;gBAQI,sCAAsC;gBACtC,YAAoB,eAA+B;oBAA/B,oBAAe,GAAf,eAAe,CAAgB;oBARnD,OAAE,GAAW,IAAI,CAAC;oBAElB,kDAAkD;oBAClD,0BAA0B;oBAC1B,2DAA2D;oBACjD,YAAO,GAA0B,IAAI,mBAAY,EAAW,CAAC;oBAInE,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;gBAC/C,CAAC;gBAED;;;;;mBAKG;gBAEH,IAAI;oBACA,MAAM,aAAa,GAAW,IAAI,CAAC,EAAE,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;oBAE7C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACxB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;oBAE7C,gEAAgE;oBAChE,wDAAwD;oBACxD,kDAAkD;oBAClD,wBAAwB;oBAExB,4DAA4D;oBAC5D,4DAA4D;oBAC5D,8BAA8B;oBAC9B,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED,QAAQ,KAAa,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;YAClD,CAAC;YAjCG;gBAAC,aAAM,EAAE;;0DAAA;YAaT;gBAAC,YAAG;;;;qDAAA;YAhFR;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,gBAAgB;oBAC1B,UAAU,EAAE,CAAC,wBAAe,CAAC;oBAC7B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAwDT;iBACJ,CAAC;;6BAAA;YACF,mCAuCC,CAAA","file":"artikelverwaltung/component/suche_artikel_id/such_kriterien.js","sourcesContent":["/*\r\n * Copyright (C) 2015 - 2016 Juergen Zimmermann, Hochschule Karlsruhe\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\n// \"core\" enthaelt Funktionalitaet, damit die Webanwendung im Browser laeuft\r\nimport {Component, Output, EventEmitter} from 'angular2/core';\r\n// \"common\" enthaelt Direktiven (z.B. ngFor, ngIf), Form Controls und Pipes\r\nimport {CORE_DIRECTIVES} from 'angular2/common';\r\n\r\nimport ArtikelService from '../../service/artikel_service';\r\nimport {log} from '../../../shared/shared';\r\n\r\n/**\r\n * Komponente f&uuml;r das Tag <code>such-kriterien</code>\r\n */\r\n@Component({\r\n    selector: 'such-kriterien',\r\n    directives: [CORE_DIRECTIVES],\r\n    template: `\r\n        <div class=\"card\">\r\n            <div class=\"card-header bg-primary\">\r\n                <h4>Eingabe der ID</h4>\r\n            </div>\r\n            <div class=\"card-block\">\r\n                <!-- Formulare zur Interaktion mit dem Endbenutzer:\r\n                        * Daten werden modifiziert, z.B. in Suchfelder\r\n                          oder Erfassungs-/Aenderungsformularen\r\n                        * Aenderungen wirken sich auf Teile der Seite aus:\r\n                          Ergebnisse/Fehler anzeigen, Navigationsmoeglichkeiten\r\n                        * Eingaben werden validiert\r\n                -->\r\n                <!-- Template-Syntax:\r\n                     (submit)=\"find()\"   fuer Output = Event Binding\r\n                                         d.h. Ereignis submit an find() anbinden\r\n                                         oder on-submit=\"find\"\r\n                     Definition von Attributnamen gemaess HTML: Attribute names\r\n                     must consist of one or more characters other than the\r\n                     space characters, U+0000 NULL, \"\"\", \"'\", \">\", \"/\", \"=\",\r\n                     the control characters, and any characters that are not\r\n                     defined by Unicode.\r\n                -->\r\n                <!-- CSS-Klassen von Bootstrap:\r\n                     form-group, row, form-control-label, btn, ...\r\n                     http://v4-alpha.getbootstrap.com/components/forms -->\r\n\r\n                <form (submit)=\"find()\" role=\"form\">\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"idInput\"\r\n                               class=\"col-sm-2 form-control-label\">ID</label>\r\n                        <div class=\"col-sm-10\">\r\n                            <input id=\"idInput\"\r\n                                type=\"search\"\r\n                                placeholder=\"Die ID oder einen Teil davon eingeben\"\r\n                                class=\"form-control\"\r\n                                [(ngModel)]=\"id\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-sm-offset-2 col-sm-10\">\r\n                            <i class=\"fa fa-info-circle\"></i>\r\n                            Hinweis: Keine Eingabe liefert alle Artikel\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-sm-offset-2 col-sm-10\">\r\n                            <button class=\"btn btn-primary\"><i class=\"fa fa-search\"></i>\r\n                            &nbsp; Go!</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport default class SuchKriterien {\r\n    id: string = null;\r\n\r\n    // Event Binding: <such-kriterien (waiting)=\"...\">\r\n    // siehe OutputMetadata in\r\n    // node_modules\\angular2\\ts\\src\\core\\metadata\\directives.ts\r\n    @Output() waiting: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    // Empfehlung: Konstruktor nur fuer DI\r\n    constructor(private _artikelService: ArtikelService) {\r\n        console.log('SuchKriterien.constructor()');\r\n    }\r\n\r\n    /**\r\n     * Suche nach B&uuml;chern, die den spezfizierten Suchkriterien entsprechen\r\n     * @param suchkriterien: Suchkriterien vom Typ IBuchForm\r\n     * @return false, um das durch den Button-Klick ausgel&ouml;ste Ereignis\r\n     *         zu konsumieren.\r\n     */\r\n    @log\r\n    find(): boolean {\r\n        const suchkriterium: string = this.id;\r\n        console.log('suchkriterien=', suchkriterium);\r\n\r\n        this.waiting.emit(true);\r\n        this._artikelService.findById(suchkriterium);\r\n\r\n        // Inspektion der Komponente mit dem Tag-Namen \"app\" im Debugger\r\n        // Voraussetzung: globale Variable ng deklarieren (s.o.)\r\n        // const app: any = document.querySelector('app');\r\n        // global.ng.probe(app);\r\n\r\n        // damit das (Submit-) Ereignis konsumiert wird und nicht an\r\n        // uebergeordnete Eltern-Komponenten propagiert wird bis zum\r\n        // Refresh der gesamten Seite.\r\n        return false;\r\n    }\r\n\r\n    toString(): String { return 'SuchKriterium'; }\r\n}\r\n"],"sourceRoot":"/source/"}