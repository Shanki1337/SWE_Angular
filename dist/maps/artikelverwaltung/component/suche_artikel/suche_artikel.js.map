{"version":3,"sources":["artikelverwaltung/component/suche_artikel/suche_artikel.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAQH;;;;;;;eAOG;YAiBH;gBAGI;oBAFA,YAAO,GAAY,KAAK,CAAC;oBAET,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;gBAAC,CAAC;gBAE5D,0CAA0C;gBAC1C,mDAAmD;gBACnD,yDAAyD;gBACzD,WAAW,KAAW,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC;gBAEhE;;;;;;;;mBAQG;gBAEH,UAAU,CAAC,MAAe,IAAU,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC;gBAE5D,QAAQ,KAAa,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC;YACjD,CAAC;YAJG;gBAAC,YAAG;;;;0DAAA;YAnCR;gBAAC,gBAAS,CAAC;oBACP,QAAQ,EAAE,eAAe;oBACzB,UAAU,EAAE,CAAC,wBAAa,EAAE,uBAAY,CAAC;oBACzC,QAAQ,EAAE;;;;;;;;;;;KAWT;iBACJ,CAAC;;4BAAA;YACF,kCAuBC,CAAA","file":"artikelverwaltung/component/suche_artikel/suche_artikel.js","sourcesContent":["/*\r\n * Copyright (C) 2015 - 2016 Juergen Zimmermann, Hochschule Karlsruhe\r\n *\r\n * This program is free software: you can redistribute it and/or modify\r\n * it under the terms of the GNU General Public License as published by\r\n * the Free Software Foundation, either version 3 of the License, or\r\n * (at your option) any later version.\r\n *\r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n *\r\n * You should have received a copy of the GNU General Public License\r\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n */\r\n\r\nimport {Component, OnDestroy} from 'angular2/core'; // externes Modul\r\n\r\nimport SuchKriterien from './such_kriterien'; // internes Modul\r\nimport SuchErgebnis from './such_ergebnis';\r\nimport {log} from '../../../shared/shared';\r\n\r\n/**\r\n * Komponente f&uuml;r das Tag <code>&lt;suche-artikel&gt;</code>, die aus den\r\n * Kindkomponenten f&uuml;r diese Tags besteht:\r\n * <ul>\r\n *  <li> <code>such-kriterien</code>\r\n *  <li> <code>such-ergebnis</code>\r\n * </ul>\r\n */\r\n@Component({\r\n    selector: 'suche-artikel',\r\n    directives: [SuchKriterien, SuchErgebnis],\r\n    template: `\r\n        <such-kriterien (waiting)=\"setWaiting($event)\"></such-kriterien>\r\n        <such-ergebnis [waiting]=\"waiting\"></such-ergebnis>\r\n\r\n        <!-- alternative Syntax:\r\n                eigenes Ereignis \"waiting\" (ausgeloest in SuchKriterien):\r\n                <such-kriterien on-waiting=\"setWaiting($event)\"></such-kriterien>\r\n\r\n                Property \"waiting\" in der Komponentenklasse\r\n                <such-ergebnis bind-waiting=\"waiting\"></such-ergebnis>\r\n        -->\r\n    `\r\n})\r\nexport default class SucheArtikel implements OnDestroy {\r\n    waiting: boolean = false;\r\n\r\n    constructor() { console.log('SucheArtikel.constructor()'); }\r\n\r\n    // Methode zum \"LifeCycle Hook\" OnDestroy:\r\n    // wird direkt vor dem Garbage Collector aufgerufen\r\n    // node_modules\\angular2\\ts\\src\\core\\linker\\interfaces.ts\r\n    ngOnDestroy(): void { console.log('SucheArtikel.onDestroy()'); }\r\n\r\n    /**\r\n     * Das Attribut <code>waiting</code> wird auf den Wert des boole'schen\r\n     * Ereignisses <code>$event</code> gesetzt. Diese Methode wird aufgerufen,\r\n     * wenn in der Kindkomponente f&uuml;r <code>such-kriterien</code> das\r\n     * Ereignis ausgel&ouml;st wird. Der aktuelle Wert vom Attribut\r\n     * <code>&lt;waiting&gt;</code> wird an die Kindkomponente f&uuml;r\r\n     * <code>&lt;such-ergebnis&gt;</code> weitergereicht.\r\n     * @param $event\r\n     */\r\n    @log\r\n    setWaiting($event: boolean): void { this.waiting = $event; }\r\n\r\n    toString(): String { return 'SucheArtikel'; }\r\n}\r\n"],"sourceRoot":"/source/"}